# 数据源1配置
spring.datasource.local.url=jdbc:mysql://0.0.0.0:3306/localdb
spring.datasource.local.username=root
spring.datasource.local.password=root
spring.datasource.local.driver-class-name=com.mysql.jdbc.Driver

#获取连接时候验证，会影响性能，但只有配置了这个，在重启数据库的时候，应用才会尝试重新连接数据库
spring.datasource.local.test-on-borrow=true
#在连接归还到连接池时是否测试该连接
spring.datasource.local.validation-query=SELECT 1 FROM DUAL

# 数据源2配置
spring.datasource.remote.url=jdbc:oracle:thin:@localhost:1521:xxdb
spring.datasource.remote.username=xxx
spring.datasource.remote.password=xxx
spring.datasource.remote.driver-class-name=oracle.jdbc.driver.OracleDriver
#获取连接时候验证，会影响性能，但只有配置了这个，在重启数据库的时候，应用才会尝试重新连接数据库
spring.datasource.remote.test-on-borrow=true
#在连接归还到连接池时是否测试该连接
spring.datasource.loremotecal.validation-query=SELECT 1 FROM DUAL


# 终端根据实际情况决定是否显示彩色
# spring.output.ansi.enabled=DETECT

# 默认20分钟
parameter.time.timeInSsAfterArr=1200
# 默认25分钟
parameter.time.displayTimeInSs4Belt=15000
# 单位分钟，默认3小时
parameter.time.displayTimeInMi4Dep=180
# 默认3小时
parameter.time.displayTimeInMi4Arr=180

# Redis服务器地址
spring.redis.host=127.0.0.1
spring.redis.port=5179
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0